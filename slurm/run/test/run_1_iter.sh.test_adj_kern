#!/bin/bash

THISNAME=`echo $0 | rev | cut -d '/' -f1 | cut -d '.' -f2 | rev | cut -d '_' -f2,3`;

###########################################
#
# Read arguments
#
###########################################

SPEC_ARCH="CPU"
SPEC_NPROC=1
LOG_PATH="./"
NPU=""
PJID=""

for i in "$@"; do
  case $i in
    -nCPU=*)
    SPEC_NPROC="${i#*=}"
    NPU="-nCPU=$SPEC_NPROC"
    NCPU="SET"
    ;;
    -nGPU=*)
    SPEC_NPROC="${i#*=}"
    SPEC_ARCH="GPU"
    NPU="-nGPU=$SPEC_NPROC"
    NGPU="SET"
    ;;
    -lp=*)
    LOG_PATH="${i#*=}"
    ;;
    -w=*)
    PJID="${i#*=}"
    ;;
    *)
    echo "unknown option"
    exit 2;
    ;;
  esac
done

if [[ $NCPU == $NGPU ]]; then
  echo "-nCPU and -nGPU cannot both be set at the same time.";
  exit 2;
fi

LDATE=`date +.on.%F.at.%H:%M:%S`
RLOG="${LOG_PATH}${THISNAME}${LDATE}.rlog"

echo "source ../env/set_base_project_env.sh" >> $RLOG;
source ../env/set_base_project_env.sh;

###########################################
#
# Step-0: Forward Solver
#
###########################################


##------- Set SAVE_MESH = .false. ---------------------##

#change_save_mesh.sh
#SJID=$CJID;
#CJID="afterok:$CJID";

JNAME="save_mesh_eq_false";
OLOG="parfile_0_${JNAME}.job.%N.%j.out";  # STDOUT
ELOG="parfile_0_${JNAME}.job.%N.%j.err";  # STDERR
PROG="../parfile/change_save_mesh.sh";

#Note: that NPU is NOT passed as an argument
echo "CJID=\$(./spec_sbatch.sh -w=$CJID -o=$OLOG -e=$ELOG -lp=$LOG_PATH -jn=$JNAME -x=$PROG -xa="false")" >> $RLOG;
CJID=$(./spec_sbatch.sh -w=$CJID -o=$OLOG -e=$ELOG -lp=$LOG_PATH -jn=$JNAME -x=$PROG -xa="false");
#echo "CJID=\$(./spec_sbatch.sh -o=$OLOG -e=$ELOG -lp=$LOG_PATH -jn=$JNAME -x=$PROG -xa="false")" >> $RLOG;
#CJID=$(./spec_sbatch.sh -o=$OLOG -e=$ELOG -lp=$LOG_PATH -jn=$JNAME -x=$PROG -xa="false");
CJID=`echo ${CJID} | rev | cut -d ' ' -f1 | rev`;
#CJID="$SJID:$CJID";


###########################################
#
# Step-3: Adjoint Kernels
#
###########################################
SJID=$CJID;
CJID="afterok:$CJID";

JNAME="adj_kernels";
OLOG="3_${JNAME}.job.%N.%j.out";  # STDOUT
ELOG="3_${JNAME}.job.%N.%j.err";  # STDERR
PROG="../1_iter/3_adj_kernels_event.slurm";

declare -A kernel_jobid_array

for dir in ${SPEC_PROJ_DIR}/run[0-9][0-9][0-9][0-9]/; do
  RDIR=`echo "$dir" | rev | cut -d '/' -f2 | rev` >> $RLOG
  OLOG="3_${JNAME}_$RDIR.job.%N.%j.out"  #STDOUT Log
  ELOG="3_${JNAME}_$RDIR.job.%N.%j.err"  #STDERR Log
  echo "CJID=\$(./spec_sbatch.sh -w=$CJID -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG -xa=$RDIR)" >> $RLOG;
  TJID=$(./spec_sbatch.sh -w=$CJID -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG -xa=$RDIR);
  TJID=`echo ${TJID} | rev | cut -d ' ' -f1 | rev`;
  kernel_jobid_array+=([$RDIR]=$TJID)
done
STR=${kernel_jobid_array[@]};
CJID=`echo ${STR// /:}`; #concatenated jobs with ':' for delimeters
CJID="$SJID:$CJID";

echo "$CJID"
