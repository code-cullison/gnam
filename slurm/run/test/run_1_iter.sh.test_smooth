#!/bin/bash

THISNAME=`echo $0 | rev | cut -d '/' -f1 | cut -d '.' -f2 | rev | cut -d '_' -f2,3`;

###########################################
#
# Read arguments
#
###########################################

SPEC_ARCH="CPU"
SPEC_NPROC=1
LOG_PATH="./"
NPU=""
PJID=""

for i in "$@"; do
  case $i in
    -nCPU=*)
    SPEC_NPROC="${i#*=}"
    NPU="-nCPU=$SPEC_NPROC"
    NCPU="SET"
    ;;
    -nGPU=*)
    SPEC_NPROC="${i#*=}"
    SPEC_ARCH="GPU"
    NPU="-nGPU=$SPEC_NPROC"
    NGPU="SET"
    ;;
    -lp=*)
    LOG_PATH="${i#*=}"
    ;;
    -w=*)
    PJID="${i#*=}"
    ;;
    *)
    echo "unknown option"
    exit 2;
    ;;
  esac
done

if [[ $NCPU == $NGPU ]]; then
  echo "-nCPU and -nGPU cannot both be set at the same time.";
  exit 2;
fi

LDATE=`date +.on.%F.at.%H:%M:%S`
RLOG="${LOG_PATH}${THISNAME}${LDATE}.rlog"

echo "source ../env/set_base_project_env.sh" >> $RLOG;
source ../env/set_base_project_env.sh;


###########################################################
#
# Step-4: Combine event kernels (still separate domains
#
###########################################################
#SJID=$CJID;
#CJID="afterok:$CJID"; 

JNAME="combine_event_kernels";
OLOG="4_${JNAME}.job.%N.%j.out";  # STDOUT
ELOG="4_${JNAME}.job.%N.%j.err";  # STDERR
PROG="../1_iter/4_combine_event_kernels.slurm";

#echo "CJID=\$(./spec_sbatch.sh -w=$CJID -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG)" >> $RLOG;
#CJID=$(./spec_sbatch.sh -w=$CJID -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG);
echo "CJID=\$(./spec_sbatch.sh -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG)" >> $RLOG;
CJID=$(./spec_sbatch.sh -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG);

CJID=`echo ${CJID} | rev | cut -d ' ' -f1 | rev`;
#CJID="$SJID:$CJID";


###########################################################
#
# Step-5a: Smooth Combined Kernels (alpha and beta)
#
###########################################################
SJID=$CJID;
NJID=$CJID; #used for the next job
CJID="afterok:$CJID"; 

JNAME="smooth_ab_kernels";
OLOG="5a_${JNAME}.job.%N.%j.out";  # STDOUT
ELOG="5a_${JNAME}.job.%N.%j.err";  # STDERR
PROG="../1_iter/5a_smooth_ab_kernels.slurm";

echo "CJID=\$(./spec_sbatch.sh -w=$CJID -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG)" >> $RLOG;
CJID=$(./spec_sbatch.sh -w=$CJID -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG);

CJID=`echo ${CJID} | rev | cut -d ' ' -f1 | rev`;
CJID="$SJID:$CJID";


###########################################################
#
# Step-5b: Smooth Combined Kernels (rho and hess)
#
###########################################################
SJID=$CJID;
CJID="afterok:$CJID"; 

JNAME="smooth_rh_kernels";
OLOG="5b_${JNAME}.job.%N.%j.out";  # STDOUT
ELOG="5b_${JNAME}.job.%N.%j.err";  # STDERR
PROG="../1_iter/5b_smooth_rh_kernels.slurm";

#Note: that $NJID is used INSTEAD of $CJID
echo "CJID=\$(./spec_sbatch.sh -w=$NJID -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG)" >> $RLOG;
CJID=$(./spec_sbatch.sh -w=$NJID -o=$OLOG -e=$ELOG $NPU -lp=$LOG_PATH -jn=$JNAME -x=$PROG);

CJID=`echo ${CJID} | rev | cut -d ' ' -f1 | rev`;
CJID="$SJID:$CJID";

echo $CJID
